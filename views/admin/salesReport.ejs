<%- include('../layouts/adminHeader') -%>

    <section class="container-fluid p-0 d-flex ">
        <aside class="side-bar mt-4 me-2" id="aside-menu">
            <button class="side-menu bitem-0 m-1" id="menu-btn" onclick="asideShow()"><span
                    class="material-symbols-outlined">menu</span></button>
            <div class="menu-values m-1 pt-2" id="menu-page">
                <a href="/admin/dashboard" class="text-black text-decoration-none"><button
                        class="admn-btn mb-2 w-100 text-start "><i class="bi bi-box2-fill ms-3"></i>
                        Dashboard</button></a>
                <a href="/admin/users" class="text-black text-decoration-none"><button class="admn-btn mb-2 w-100 text-start "><i
                            class="bi bi-people-fill ms-3"></i> Customers</button></a>
                <a href="/admin/productManage" class="text-black text-decoration-none"><button
                        class="admn-btn mb-2 w-100 text-start "><i class="bi bi-archive-fill ms-3"></i>
                        Products</button></a>
                <a href="/admin/allOrders" class="text-black text-decoration-none"><button class="admn-btn mb-2 w-100 text-start "><i
                            class="bi bi-file-earmark-fill ms-3"></i> Orders</button></a>
                <a href="/admin/categoryManage" class="text-black text-decoration-none"><button class="admn-btn mb-2 w-100 text-start "><i
                            class="bi bi-diagram-2-fill ms-3"></i> Category</button></a>
                <a href="" class="text-black text-decoration-none"><button class="admn-btn mb-2 w-100 text-start "><i
                            class="bi bi-card-image ms-3"></i> Banners</button></a>
                <a href="/admin/couponManage" class="text-black text-decoration-none"><button class="admn-btn mb-2 w-100 text-start "><i
                            class="bi bi-star-fill ms-3"></i> coupons</button></a>
                <a href="/admin/salesReport" class="text-black text-decoration-none"><button class="admn-btn-A mb-2 w-100 text-start "><i
                            class="bi bi-clipboard-data-fill ms-3"></i> Sales Report</button></a>
            </div>
            <div class="adm-lgout m-1" id="l-out-btn">
                <a class="text-black text-decoration-none" href="/admin/adminLogout"><button
                        class="admn-btn w-100 text-start "><i class="bi bi-box-arrow-right ms-3"></i>
                        Logout</button></a>
            </div>
        </aside>
        <div class="px-3 w-75">          
          <div class="d-flex justify-content-between mt-2">
            <div>
              <button id="export-btn" class="btn btn-success">Print Report</button>
              <button id="excel-btn" class="btn btn-success">Excel Report</button>
            </div>
            <div class="">
              <a class="btn btn-dark" href="/admin/salesReport?filter=day">Day</a>
              <a class="btn btn-dark" href="/admin/salesReport?filter=week">Week</a>
              <a class="btn btn-dark" href="/admin/salesReport?filter=month">Month</a>
              <a class="btn btn-dark" href="/admin/salesReport?filter=year">Year</a>
            </div>
          </div>
          <div class="my-2">
            <form id="customDateRangeForm" onsubmit="return custmDateRangeForm()" class="">
              <div class="row g-2">
                <div class="col-md-auto">
                  <label for="startDate" class="form-label">Start Date:</label>
                  <input type="date" id="startDate" name="startDate" class="form-control" required>
                </div>
                <div class="col-md-auto">
                  <label for="endDate" class="form-label">End Date:</label>
                  <input type="date" id="endDate" name="endDate" class="form-control" required>
                </div>
                <div class="col-md-auto pt-4">
                  <input type="hidden" name="filter" value="custom" id="">
                  <button type="submit" class="btn btn-primary mt-2">Apply</button>
                </div>
              </div>
            </form>
          </div>
            <div class="table-responsive mt-1">
              <table id="reportTable" class="table table-bordered table-success table-hover">
                <thead>
                  <tr id="top">
                    <td class="fw-bold">Total sales count : <span class="bg-white px-2 h5"><%= sales.length %></span></td>
                    <td colspan="3" class="fw-bold">Total sales amount : <span class="bg-white px-2 h5"><%= totalSalesAmount - tDiscount %></span></td>
                    <td colspan="4" class="fw-bold">Total discount : <span class="bg-white px-2 h5"><%= tDiscount %></span></td>
                  </tr>
                  <tr><td colspan="8"></td></tr>
                  <tr  class="table-dark">
                    <th scope="col">Product ID</th>
                    <th scope="col">Product name</th>   
                    <th scope="col">Price</th>             
                    <th scope="col">Quantity</th>
                    <th scope="col">Final Price</th>
                    <th scope="col">Discount</th>
                    <th scope="col">Payment Method</th>
                    <th scope="col">Date</th>              
                  </tr>
                </thead>
                <tbody>
                    <% if(typeof sales!=='undefined' && sales.length > 0){ %>
                  <% sales.forEach((item,i) => { %>
                    <tr>
                        <td>#<%= item.productId %></td>
                        <td><%= item.productName %></td>
                        <td>₹<%= item.price %></td>
                        <td><%= item.quantity %></td>
                        <td>₹<%= item.finalPrice %></td>
                        <td>₹<%= item.discount %></td>
                        <td><%= item.paymentMethod %></td>
                        <td><%= item.date ? item.date.toLocaleString('default', { month: 'numeric', day: 'numeric', year: 'numeric' }) : '' %></td>      
                    </tr>
                  <% }) %>
                  <% }else{ %>
                    <tr>
                      <td colspan="8" class="text-center fw-bold">There are no sales</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
            <nav aria-label="Page navigation">
              <ul class="pagination justify-content-end">
                <li class="page-item">
                  <a class="page-link" href="<%= currentPage > 1 ? `?page=${currentPage - 1}&filter=${filterBy}` : '#' %>" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                  </a>
                </li>
                <% for (let i = 1; i <= totalPages; i++) { %>
                  <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                    <a class="page-link" href="<%= `?page=${i}` %>"><%= i %></a>
                  </li>
                <% } %>
                <li class="page-item">
                  <a class="page-link" href="<%= currentPage < totalPages ? `?page=${currentPage + 1}&filter=${filterBy}` : '#' %>" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                  </a>
                </li>
              </ul>
            </nav>
        </div>
    </section>

    <%- include('../layouts/footer') -%>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/4.3.0/exceljs.min.js"></script>
    <script>
        function isLocalStorageSupported() {
            try {
                return 'localStorage' in window && window['localStorage'] !== null
            } catch (e) {
                return false
            }
        }
        function getFilteredDates() {
            if (isLocalStorageSupported()) {
                let startDate = localStorage.getItem('startDate')
                let endDate = localStorage.getItem('endDate')
                if (startDate && endDate) {
                    document.getElementById("startDate").value = startDate
                    document.getElementById("endDate").value = endDate
                }
            }
        }

        window.onload = function() {
            getFilteredDates()
        }

      const custmDateRangeForm = ()=>{
        let startDate = document.getElementById("startDate").value
        let endDate = document.getElementById("endDate").value
        let currentDate = new Date()
        let startDateObj = new Date(startDate);
        let endDateObj = new Date(endDate)
        if (startDate > endDate) {
          Swal.fire({
              title: 'Oops...',
              text: 'End date must be greater than start date.',
              icon: 'error',
              confirmButtonColor: '#3085d6',
          })
            return false
        }else if(startDateObj > currentDate || endDateObj > currentDate){
          Swal.fire({
              title: 'Oops...',
              text: 'Selected date is in the future.',
              icon: 'error',
              confirmButtonColor: '#3085d6',
          })
            return false
        }
        localStorage.setItem('startDate', startDate);
        localStorage.setItem('endDate', endDate)
        return true
      }

      const reportTable = document.getElementById("reportTable")
      const exportBtn = document.getElementById('export-btn')
      exportBtn.addEventListener('click',()=>{
          let newWin= window.open("")
          reportTable.setAttribute('border','1')
          // const clonedTable = reportTable.cloneNode(true);
          // clonedTable.querySelectorAll('tr').forEach(row => {
          //     row.deleteCell(-1)
          // })
          newWin.document.write(reportTable.outerHTML)
          newWin.print()
          newWin.close()
      })      

      const excelBtn = document.getElementById('excel-btn')
      excelBtn.addEventListener('click',async ()=>{
        try {
            const { value: confirmed } = await Swal.fire({
                title: 'Generate Excel?',
                text: 'Are you sure you want to generate the Excel file?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Download'
            })

            if (confirmed) {
              const workbook = new ExcelJS.Workbook()
              const worksheet = workbook.addWorksheet('Report Data')

              const headers = Array.from(reportTable.querySelectorAll('th')).map(th => th.textContent.trim())
              worksheet.addRow(headers);
              const rows = Array.from(reportTable.querySelectorAll('tbody tr')).map(row =>
                  Array.from(row.querySelectorAll('td')).map(td => td.textContent.trim())
              )
              rows.forEach(row => worksheet.addRow(row))

              const overHead = Array.from(reportTable.querySelectorAll('thead td')).map(td => td.textContent.trim())
              worksheet.addRow(overHead)

              const buffer = await workbook.xlsx.writeBuffer()
              const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' })

              const link = document.createElement('a')
              link.href = URL.createObjectURL(blob)
              link.download = 'report_data.xlsx'
              link.click()
              URL.revokeObjectURL(link.href)

              Swal.fire({
                  icon: 'success',
                  title: 'Excel file downloaded!',
                  showConfirmButton: false,
                  timer: 1500
              })
            }
        } catch (error) {
            console.error('Error generating Excel:', error)
        }
      })
    </script>